var searchData=
[
  ['qm_0',['Qm',['../namespacedftefe_1_1atoms.html#ae8d3bc656184deb85c92e80d0d5c9237',1,'dftefe::atoms']]],
  ['quadraturepointattributes_1',['QuadraturePointAttributes',['../classdftefe_1_1quadrature_1_1QuadraturePointAttributes.html#a3b74b7ca737c6b47ce4ded7e7fc3c57a',1,'dftefe::quadrature::QuadraturePointAttributes::QuadraturePointAttributes(const size_type inputCellId, const QuadratureRuleAttributes *inputQuadratureRuleAttributesPtr, const size_type inputQuadPointId)'],['../classdftefe_1_1quadrature_1_1QuadraturePointAttributes.html#a52feb8d660089249d1dc9818fd9890e1',1,'dftefe::quadrature::QuadraturePointAttributes::QuadraturePointAttributes()']]],
  ['quadraturerule_2',['QuadratureRule',['../classdftefe_1_1quadrature_1_1QuadratureRule.html#af57568a7ed989a5717f3985ccfdf8263',1,'dftefe::quadrature::QuadratureRule::QuadratureRule()'],['../classdftefe_1_1quadrature_1_1QuadratureRule.html#a1f32412137441804b2887b78983da4ea',1,'dftefe::quadrature::QuadratureRule::QuadratureRule(const size_type dim, const std::vector&lt; utils::Point &gt; &amp;points, const std::vector&lt; double &gt; &amp;weights)']]],
  ['quadratureruleadaptive_3',['QuadratureRuleAdaptive',['../classdftefe_1_1quadrature_1_1QuadratureRuleAdaptive.html#aa490c39e27a91403c23585c8c95199f8',1,'dftefe::quadrature::QuadratureRuleAdaptive']]],
  ['quadratureruleattributes_4',['QuadratureRuleAttributes',['../classdftefe_1_1quadrature_1_1QuadratureRuleAttributes.html#a1db39c81fa7f661acb6a1cdc8ed97562',1,'dftefe::quadrature::QuadratureRuleAttributes::QuadratureRuleAttributes()'],['../classdftefe_1_1quadrature_1_1QuadratureRuleAttributes.html#a38173ee0d8d2a21565a4029e0b2bde16',1,'dftefe::quadrature::QuadratureRuleAttributes::QuadratureRuleAttributes(const QuadratureFamily quadratureFamily, const bool isCartesianTensorStructured, const size_type num1DPoints=QuadratureRuleAttributesDefaults::NUM_1D_POINTS, const std::string tag=QuadratureRuleAttributesDefaults::TAG)']]],
  ['quadraturerulecontainer_5',['QuadratureRuleContainer',['../classdftefe_1_1quadrature_1_1QuadratureRuleContainer.html#a6e9cfbdc335fa04022b78f843c5b05a7',1,'dftefe::quadrature::QuadratureRuleContainer::QuadratureRuleContainer(const QuadratureRuleAttributes &amp;quadratureRuleAttributes, std::shared_ptr&lt; const QuadratureRule &gt; quadratureRule, std::shared_ptr&lt; const basis::TriangulationBase &gt; triangulation, const basis::CellMappingBase &amp;cellMapping)'],['../classdftefe_1_1quadrature_1_1QuadratureRuleContainer.html#aa6c0f3551d1fdffeb25464d2eec78526',1,'dftefe::quadrature::QuadratureRuleContainer::QuadratureRuleContainer(const QuadratureRuleAttributes &amp;quadratureRuleAttributes, std::vector&lt; std::shared_ptr&lt; const QuadratureRule &gt; &gt; quadratureRuleVec, std::shared_ptr&lt; const basis::TriangulationBase &gt; triangulation, const basis::CellMappingBase &amp;cellMapping)'],['../classdftefe_1_1quadrature_1_1QuadratureRuleContainer.html#af1a28e6165175341967a4d8ccaa2d1ad',1,'dftefe::quadrature::QuadratureRuleContainer::QuadratureRuleContainer(const QuadratureRuleAttributes &amp;quadratureRuleAttributes, std::shared_ptr&lt; const QuadratureRule &gt; baseQuadratureRule, std::shared_ptr&lt; const basis::TriangulationBase &gt; triangulation, const basis::CellMappingBase &amp;cellMapping, basis::ParentToChildCellsManagerBase &amp;parentToChildCellsManager, std::vector&lt; std::shared_ptr&lt; const utils::ScalarSpatialFunctionReal &gt; &gt; functions, const std::vector&lt; double &gt; &amp;absoluteTolerances, const std::vector&lt; double &gt; &amp;relativeTolerances, const std::vector&lt; double &gt; &amp;integralThresholds, const double smallestCellVolume=QuadratureRuleAdaptiveDefaults::SMALLEST_CELL_VOLUME, const unsigned int maxRecursion=QuadratureRuleAdaptiveDefaults::MAX_RECURSION)'],['../classdftefe_1_1quadrature_1_1QuadratureRuleContainer.html#abe1c7b1dacd4cd250dafbcc30796beb9',1,'dftefe::quadrature::QuadratureRuleContainer::QuadratureRuleContainer(const QuadratureRuleAttributes &amp;quadratureRuleAttributes, const size_type order1DMin, const size_type order1DMax, const size_type copies1DMax, std::shared_ptr&lt; const basis::TriangulationBase &gt; triangulation, const basis::CellMappingBase &amp;cellMapping, std::vector&lt; std::shared_ptr&lt; const utils::ScalarSpatialFunctionReal &gt; &gt; functions, const std::vector&lt; double &gt; &amp;absoluteTolerances, const std::vector&lt; double &gt; &amp;relativeTolerances, const quadrature::QuadratureRuleContainer &amp;quadratureRuleContainerReference, const utils::mpi::MPIComm &amp;comm)']]],
  ['quadraturerulegauss_6',['QuadratureRuleGauss',['../classdftefe_1_1quadrature_1_1QuadratureRuleGauss.html#aa3ed6dc18caa47bc0635dec0d2219551',1,'dftefe::quadrature::QuadratureRuleGauss']]],
  ['quadraturerulegaussiterated_7',['QuadratureRuleGaussIterated',['../classdftefe_1_1quadrature_1_1QuadratureRuleGaussIterated.html#a796856380c70c068b9f52f0d6b49444e',1,'dftefe::quadrature::QuadratureRuleGaussIterated']]],
  ['quadraturerulegll_8',['QuadratureRuleGLL',['../classdftefe_1_1quadrature_1_1QuadratureRuleGLL.html#a1cf922ffde7d591c33c8eef7196ebb50',1,'dftefe::quadrature::QuadratureRuleGLL']]],
  ['quadraturevaluescontainer_9',['QuadratureValuesContainer',['../classdftefe_1_1quadrature_1_1QuadratureValuesContainer.html#aefb80103008c1236ddb2f6c7ca43a291',1,'dftefe::quadrature::QuadratureValuesContainer::QuadratureValuesContainer()'],['../classdftefe_1_1quadrature_1_1QuadratureValuesContainer.html#a872054c1db4d54db20038410040153e7',1,'dftefe::quadrature::QuadratureValuesContainer::QuadratureValuesContainer(std::shared_ptr&lt; const QuadratureRuleContainer &gt; quadratureRuleContainer, const size_type numberComponents, const ValueType initVal=ValueType())'],['../classdftefe_1_1quadrature_1_1QuadratureValuesContainer.html#a336989f5061834c9963eb0ee20f68e5f',1,'dftefe::quadrature::QuadratureValuesContainer::QuadratureValuesContainer(const QuadratureValuesContainer &amp;u)'],['../classdftefe_1_1quadrature_1_1QuadratureValuesContainer.html#aa06c606f3913e4487289777535e2392b',1,'dftefe::quadrature::QuadratureValuesContainer::QuadratureValuesContainer(QuadratureValuesContainer &amp;&amp;u)']]]
];

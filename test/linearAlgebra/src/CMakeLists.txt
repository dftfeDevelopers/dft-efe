cmake_minimum_required(VERSION 3.17)
project(reframe_linear_algebra_test)
set(CMAKE_CXX_STANDARD 14)

set(MAIN_PROJECT_DIR ${DFTEFE_PATH})
message(${MAIN_PROJECT_DIR})

if (ENABLE_CUDA)
    enable_language(CUDA)
    add_compile_definitions(DFTEFE_WITH_DEVICE)
    add_compile_definitions(DFTEFE_WITH_DEVICE_CUDA)
endif()

add_subdirectory(${MAIN_PROJECT_DIR}/src/linearAlgebra ${MAIN_PROJECT_DIR}/test/linearAlgebra/lib/buildLinearAlgebra)
include_directories(${MAIN_PROJECT_DIR}/src)

# CPU: testing +=, -=, add, copy constructor
add_executable(TestVectorAggregate1.x TestVectorAggregate1.cpp)
target_link_libraries(TestVectorAggregate1.x PUBLIC dft-efe-linalg)
#set_target_properties(TestVectorAggregate1 PROPERTIES OUTPUT_NAME "TestVectorAggregate1" SUFFIX ".x")

# CPU: testing l2Norm, lInfNorm
add_executable(TestVectorNorms.x TestVectorNorms.cpp)
target_link_libraries(TestVectorNorms.x PUBLIC dft-efe-linalg)
#set_target_properties(TestVectorNorms PROPERTIES OUTPUT_NAME "TestVectorNorms" SUFFIX ".x")

# GPU: testing +=, -=, add, copy constructor
if (ENABLE_CUDA)
    add_executable(TestVectorAggregate2.x TestVectorAggregate2.cpp)
    target_link_libraries(TestVectorAggregate2.x PUBLIC dft-efe-linalg)
#    set_target_properties(TestVectorAggregate2 PROPERTIES OUTPUT_NAME "TestVectorAggregate2" SUFFIX ".x")
endif()